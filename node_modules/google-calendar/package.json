{
  "name": "google-calendar",
  "description": "Google Calendar Connection for Node.js",
  "homepage": "https://github.com/berryboy/google-calendar",
  "repository": {
    "type": "git",
    "url": "https://github.com/berryboy/google-calendar"
  },
  "version": "0.0.5",
  "main": "./GoogleCalendar",
  "dependencies": {
    "restler": "2.0.1",
    "express": "2.5.9",
    "google-oauth": "0.0.2"
  },
  "readme": "Google-Calendar\n=======\n\nGoogle Calendar Connection for Node.js\n\n\nInstallation\n=======\n\nTo install from npm, run:\n\n```shell\nnpm install google-calendar\n```\n\nTo use the Google Calendar API, you need consumer_key and consumer_secret to initiate the module:\n\n```javascript\n\nvar GoogleCalendar = require('google-calendar');\nvar google_calendar = new GoogleCalendar.GoogleCalendar(\n  config.consumer_key, \n  config.consumer_secret,\n  'http://localhost:8082/authentication');\n  \n```\n\nOAuth Authentication\n=======\n\nThis module includes [google-oauht](https://github.com/berryboy/google-oauth) for OAuth 2.0 authentication.\nIf you use framework such as [express](git://github.com/visionmedia/express), you can create OAuht authentication by following :\n\n```javascript\n\napp.all('/authentication', function(req, res){\n\t\n\tif(!req.query.code){\n\t  \n\t  //Redirect the user to Google's authentication form \n\t  google_calendar.getGoogleAuthorizeTokenURL(function(err, redirecUrl) {\n  \t\tif(err) return res.send(500,err);\n  \t  return res.redirect(redirecUrl);\n  \t});\n  \t\n\t}else{\n\t  //Get access_token from the code\n\t  google_calendar.getGoogleAccessToken(req.query, function(err, access_token, refresh_token) {\n\t    \n  \t\tif(err) return res.send(500,err);\n  \t\t\n  \t\treq.session.access_token = access_token;\n  \t\treq.session.refresh_token = refresh_token;\n  \t  return res.redirect('/');\n  \t});\n\t}\n});\n\n```\n\nGoogle Calendar Usage\n=======\n\nThis module (try to) follows [Google Calendar API Reference](https://developers.google.com/google-apps/calendar/v3/reference/).\n\n\n```javascript\n\n//CalendarList.list\ngoogle_calendar.listCalendarList(access_token, function(err, calendarList) {\n  \n  calendarList.items.forEach(function(calendar) {\n    \n    //Events.list\n    google_calendar.listEvent(access_token, calendar.id, function(err, events) {\n      \n      console.log('Calendar : ' + calendar.summary)\n      events.items.forEach(function(event) {\n        console.log('> ' + event.summary)\n      });\n    });\n  });\n});\n\n```\n\nImplemented Methods List\n=======\n\nCalendar List\n\n- GoogleCalendar.listCalendarList = function(access_token, option, callback) \n\n- GoogleCalendar.getCalendarList = function(access_token, calendarId, callback)\n\nEvents\n\n- GoogleCalendar.listEvent = function(access_token, calendarId, option, callback) \n\n- GoogleCalendar.insertEvent = function(access_token, calendarId, event, option, callback) \n\n- GoogleCalendar.getEvent = function(access_token, calendarId, eventId, option, callback)\n\n- GoogleCalendar.deleteEvent = function(access_token, calendarId, eventId, option, callback) \n\n- GoogleCalendar.updateEvent = function(access_token, calendarId, eventId, event, option, callback)\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/berryboy/google-calendar/issues"
  },
  "_id": "google-calendar@0.0.5",
  "_from": "google-calendar@"
}
